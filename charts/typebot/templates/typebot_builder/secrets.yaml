# templates/typebot-env-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "typebotio.fullname" . }}-typebot-env
type: Opaque
{{- /* --- Stable ENCRYPTION_SECRET generation / reuse --- */ -}}
{{- $secretName := printf "%s-typebot-env" (include "typebotio.fullname" .) -}}
{{- $existing := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- $enc := "" -}}
{{- if .Values.typebot.ENCRYPTION_SECRET }}
  {{- $enc = .Values.typebot.ENCRYPTION_SECRET -}}
{{- else if $existing }}
  {{- $enc = (b64dec (index $existing.data "ENCRYPTION_SECRET")) -}}
{{- else }}
  {{- $enc = randAlphaNum 32 -}}
{{- end }}

stringData:
  # Required by Typebot (must be 32 chars)
  ENCRYPTION_SECRET: {{ $enc | quote }}

  # Required URLs (these must be valid)
  NEXTAUTH_URL: {{ required "typebot.NEXTAUTH_URL is required" .Values.typebot.NEXTAUTH_URL | quote }}
  NEXT_PUBLIC_VIEWER_URL: {{ required "typebot.NEXT_PUBLIC_VIEWER_URL is required" .Values.typebot.NEXT_PUBLIC_VIEWER_URL | quote }}

  # Database / Redis (we compute from embedded services)
  DATABASE_URL: {{ printf "postgresql://%s:%s@%s:%d/%s"
      .Values.typebot_db.auth.user
      .Values.typebot_db.auth.password
      (default (printf "%s-postgres" (include "typebotio.fullname" .)) .Values.typebot_db.service.nameOverride)
      (int .Values.typebot_db.service.port)
      .Values.typebot_db.auth.database | quote }}

  {{- if .Values.typebot_redis.auth.enabled }}
  REDIS_URL: {{ printf "redis://:%s@%s:%d/0"
      .Values.typebot_redis.auth.password
      (default (printf "%s-redis" (include "typebotio.fullname" .)) .Values.typebot_redis.service.nameOverride)
      (int .Values.typebot_redis.service.port) | quote }}
  {{- else }}
  REDIS_URL: {{ printf "redis://%s:%d/0"
      (default (printf "%s-redis" (include "typebotio.fullname" .)) .Values.typebot_redis.service.nameOverride)
      (int .Values.typebot_redis.service.port) | quote }}
  {{- end }}
