{{- if .Values.ingress.viewer.enabled }}
{{- $fullname := include "typebotio.fullname" . -}}
{{- $v := .Values.ingress.viewer -}}
{{- $class := $v.className | default "" -}}
{{- $ann := dict -}}
{{- if $v.annotations }}{{- $ann = merge $ann $v.annotations -}}{{- end -}}
{{- if and $v.tls.enabled (eq $v.tls.source "cert-manager") -}}
{{- $_ := set $ann "cert-manager.io/cluster-issuer" ($v.tls.clusterIssuer | default "letsencrypt") -}}
{{- end -}}
{{- $svcName := default (printf "%s-typebot-viewer" $fullname) $v.service.nameOverride -}}
{{- $tlsSecret := default (printf "%s-viewer-tls" $fullname) $v.tls.secretName -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullname }}-ingress-viewer
  labels:
    {{- include "typebotio.labels" . | nindent 4 }}
  {{- if $ann }}
  annotations:
    {{- toYaml $ann | nindent 4 }}
  {{- end }}
spec:
  {{- if $class }}
  ingressClassName: {{ $class | quote }}
  {{- end }}
  rules:
    - host: {{ $v.host | quote }}
      http:
        paths:
          - path: {{ $v.path | default "/" | quote }}
            pathType: Prefix
            backend:
              service:
                name: {{ $svcName }}
                port:
                  number: {{ $v.service.port | default 80 }}
  {{- if $v.tls.enabled }}
  tls:
    - hosts:
        - {{ $v.host | quote }}
      secretName: {{ $tlsSecret | quote }}
  {{- end }}
{{- end }}
